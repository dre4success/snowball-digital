AWSTemplateFormatVersion: 2010-09-09

Parameters:
        EC2InstanceType:
                Type: String
        EC2AMI:
                Type: 'AWS::EC2::Image::Id'
                Default: 'ami-03d8261f577d71b6a'
        CodePipelineBucket:
                Type: String
                Description: 'The S3 bucket for CodePipeline artifacts'
        GitHubOwner:
                Type: String
                Description: 'The username of the source GitHub repo.'
        GitHubRepo:
                Type: String
                Description: 'The source GitHub repo name (without the username).'
        GitHubBranch:
                Type: String
                Default: master
                Description: 'The source GitHub branch.'
        GitHubPersonalAccessToken:
                Type: String
                NoEcho: true
                Description: 'A GitHub personal access token with "repo" and "admin:repo_hook" permissions.'



Resources:
        DeploymentRole:
                Type: AWS::IAM::Role
                Properties:
                        AssumeRolePolicyDocument:
                                Version: "2012-10-17"
                                Statement:
                                        Effect: Allow
                                        Principal:
                                                Service:
                                                        - codepipeline.amazonaws.com
                                                        - codedeploy.amazonaws.com
                                                        - codebuild.amazonaws.com
                                        Action: sts:AssumeRole
                        ManagedPolicyArns:
                                - arn:aws:iam::aws:policy/PowerUserAccess
        
        BuildProject:
                Type: AWS::CodeBuild::Project
                Properties:
                        Name: !Ref AWS::StackName
                        ServiceRole: !GetAtt DeploymentRole.Arn
                        Artifacts:
                                Type: CODEPIPELINE
                        Environment:
                                Type: LINUX_CONTAINER
                                ComputeType: BUILD_GENERAL1_SMALL
                                Image: aws/codebuild/standard:2.0
                        Source:
                                Type: CODEPIPELINE
        
        DeploymentApplication:
                Type: AWS::CodeDeploy::Application
                Properties:
                        ApplicationName: !Ref AWS::StackName
                        ComputePlatform: Server
        
        StagingDeploymentGroup:
                Type: AWS::CodeDeploy::DeploymentGroup
                DependsOn: Instance
                Properties:
                        DeploymentGroupName: staging
                        ApplicationName: !Ref DeploymentApplication
                        DeploymentConfigName: CodeDeployDefault.AllAtOnce
                        ServiceRoleArn: !GetAtt DeploymentRole.Arn
                        Ec2TagFilters:
                                - Key: aws:cloudformation:stack-name
                                  Type: KEY_AND_VALUE
                                  Value: !Ref AWS::StackName

        Pipeline:
                Type: AWS::CodePipeline::Pipeline
                Properties:
                        Name: !Ref AWS::StackName
                        ArtifactStore:
                                Location: !Ref CodePipelineBucket
                                Type: S3
                        RoleArn: !GetAtt DeploymentRole.Arn
                        Stages:
                                - Name: Source
                                  Actions:
                                        - Name: Source
                                          ActionTypeId:
                                                Category: Source
                                                Owner: ThirdParty
                                                Version: 1
                                                Provider: GitHub
                                          OutputArtifacts:
                                                - Name: Source
                                          Configuration:
                                                Owner: !Ref GitHubOwner
                                                Repo: !Ref GitHubRepo
                                                Branch: !Ref GitHubBranch
                                                OAuthToken: !Ref GitHubPersonalAccessToken
                                                PollForSourceChanges: false
                                          RunOrder: 1
                                - Name: Build
                                  Actions:
                                        - Name: Build
                                          ActionTypeId:
                                                Category: Build
                                                Owner: AWS
                                                Version: 1
                                                Provider: CodeBuild
                                          InputArtifacts:
                                                - Name: Source
                                          OutputArtifacts:
                                                - Name: Build
                                          Configuration:
                                                ProjectName: !Ref BuildProject
                                          RunOrder: 1
                                - Name: Staging
                                  Actions:
                                        - Name: Staging
                                          InputArtifacts:
                                                - Name: Build
                                          ActionTypeId:
                                                Category: Deploy
                                                Owner: AWS
                                                Version: 1
                                                Provider: CodeDeploy
                                          Configuration:
                                                ApplicationName: !Ref DeploymentApplication
                                                DeploymentGroupName: !Ref StagingDeploymentGroup
                                          RunOrder: 1
        
        PipelineWebhook:
                Type: AWS::CodePipeline::Webhook
                Properties:
                        Authentication: GITHUB_HMAC
                        AuthenticationConfiguration:
                                SecretToken: !Ref GitHubPersonalAccessToken
                        Filters:
                                - JsonPath: $.ref
                                  MatchEquals: 'refs/heads/{Branch}'
                        TargetPipeline: !Ref Pipeline
                        TargetAction: Source
                        Name: !Sub 'webhook-${AWS::StackName}'
                        TargetPipelineVersion: !GetAtt Pipeline.Version
                        RegisterWithThirdParty: true
                                                        
        SecurityGroup:
                Type: AWS::EC2::SecurityGroup
                Properties:
                        GroupDescription: !Sub 'Internal Security group for ${AWS::StackName}'

                        SecurityGroupIngress:
                                - IpProtocol: tcp
                                  FromPort: 5051
                                  ToPort: 5051
                                  CidrIp: 0.0.0.0/0
                                - IpProtocol: tcp
                                  FromPort: 22
                                  ToPort: 22
                                  CidrIp: 0.0.0.0/0
                        Tags:
                                - Key: Name
                                  Value: !Ref AWS::StackName
        InstanceRole:
                Type: "AWS::IAM::Role"
                Properties:
                        AssumeRolePolicyDocument:
                                Version: "2012-10-17"
                                Statement:
                                        Effect: Allow
                                        Principal:
                                                Service:
                                                        - "ec2.amazonaws.com"
                                        Action: sts:AssumeRole
                        ManagedPolicyArns:
                                - arn:aws:iam::aws:policy/CloudWatchFullAccess
                                - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforAWSCodeDeploy
                        Tags:
                                - Key: Name
                                  Value: !Ref AWS::StackName
        InstanceProfile:
                Type: "AWS::IAM::InstanceProfile"
                Properties:
                        Roles:
                                - Ref: InstanceRole

        Instance:
                Type: AWS::EC2::Instance
                DeletionPolicy: Retain
                CreationPolicy:
                        ResourceSignal:
                                Timeout: PT5M
                                Count: 1
                Metadata:
                        AWS::CloudFormation::Init:
                                config:
                                        packages:
                                                apt-get:
                                                        ruby: []
                                                        wget: []
                                                        unzip: []
                                        files:
                                                /home/ubuntu/install:
                                                        source: !Sub "https://aws-codedeploy-${AWS::Region}.s3.amazonaws.com/latest/install"
                                                        mode: "000755" #executable
                                        commands:
                                                00-install-cd-agent:
                                                        command: "./install auto"
                                                        cwd: "/home/ubuntu/"

                Properties:
                        ImageId: !Ref EC2AMI
                        InstanceType: !Ref EC2InstanceType
                        IamInstanceProfile: !Ref InstanceProfile
                        Monitoring: true
                        SecurityGroupIds:
                                - !GetAtt SecurityGroup.GroupId
                        UserData:
                                Fn::Base64: !Sub |
                                        #!/bin/bash -xe
                                        apt-get update
                                        apt-get install ec2-instance-connect
                                        # send script output to /tmp so we can debut boot failures
                                        exec > /tmp/userdata.log 2>&1

                                        # Update all packages
                                        sudo apt-get install -y ruby
                                        sudo apt-get install -y unzip
                                        apt-get install -y python-setuptools

                                        # Get latest cfn scripts; https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/best- practices.html#cfninit
                                        mkdir -p /opt/aws/bin
                                        apt-get update -y
                                        apt-get install -y python-pip
                                        apt-get install -y python-setuptools
                                        python /usr/lib/python2.7/dist-packages/easy_install.py --script-dir /opt/aws/bin https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz

                                        cat > /tmp/install_script.sh << EOF
                                                # START
                                                echo "Setting up NodeJS Environment"
                                                curl https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash

                                                # Dot source the files to ensure that variables are available within the current shell

                                                . /home/ubuntu/.bashrc

                                                # Install NPM, Node.JS
                                                curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
                                                sudo apt-get install -y nodejs

                                                # Create log directory
                                                mkdir -p /home/ubuntu/app/logs
                                        EOF

                                        chown ubuntu:ubuntu /tmp/install_script.sh && chmod a+x /tmp/install_script.sh
                                        sleep 1; su - ubuntu -c "/tmp/install_script.sh"

                                        # Have CloudFormation install any files and packages from metadata
                                        /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --region ${AWS::Region} --resource Instance

                                        # Signal to CloudFormation that the instance is ready
                                        /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region} --resource Instance


                                
                        Tags:
                                - Key: Name
                                  Value: !Ref AWS::StackName        


Outputs:
        InstanceEndpoint:
                Description: The DNS name for the created instance
                Value: !Sub "http://${Instance.PublicDnsName}:5051"
                Export:
                        Name: InstanceEndpoint


